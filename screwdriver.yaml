version: 4
shared:
  environment:
    PACKAGE_DIRECTORY: invirtualenv

jobs:
  validate_test:
    template: python/validate_unittest
    requires: [~commit, ~pr]

  validate_lint:
    template: python/validate_lint
    requires: [~commit, ~pr]

  validate_codestyle:
    template: python/validate_codestyle
    requires: [~commit, ~pr]

  generate_version:
    template: python/generate_version
    requires: [~commit]

  publish_test_pypi:
    template: python/package_python
    environment:
      PUBLISH: True
      TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
    requires: [validate_test, validate_lint, validate_codestyle, generate_version]

  verify_test_package:
    template: python/validate_unittest
    steps:
    -   postsetup_environment: |
            PACKAGE_NAME="`$BASE_PYTHON setup.py --name`"
            PACKAGE_VERSION="`meta get package.version`"

    -   preinstall_tox: |
            $BASE_PYTHON -m venv /tmp/functional_test
    
    -   install_tox: |
            /tmp/functional_test/bin/pip install pytest wheel jinja2 requests six>=1.5 virtualenv
            /tmp/functional_test/bin/python << EOF
            import os
            import subprocess
            import sys
            import time
            command = [sys.executable, '-m', 'pip', 'install', '--index-url=https://test.pypi.org/simple', f'{os.environ["PACKAGE_NAME"]}=={os.environ["PACKAGE_VERSION"]}']
            rc = 1
            for count in range(10):
                try:
                    output = subprocess.check_output(command)
                    rc = 0
                    break
                except subprocess.CalledProcessError as error:
                    output = error.stdout
                    rc = error.returncode
                    time.sleep(5)
                sys.stdout.write(output)
            sys.exit(rc)
            EOF
            /tmp/functional_test/bin/pip install --index-url=https://test.pypi.org/simple $PACKAGE_NAME==$PACKAGE_VERSION
    -   validate_code: |
            cd /tmp
            /tmp/functional_test/bin/pytest $SD_SOURCE_DIR/tests/  
            cd "$SD_SOURCE_DIR"
    -   codecov: echo "Functional tests do not log coverage"
    requires: [publish_test_pypi]
    
  publish_prod_pypi:
    template: python/package_python
    environment:
      PUBLISH: True
    requires: [verify_test_package]  
