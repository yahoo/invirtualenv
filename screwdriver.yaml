version: 4
shared:
  environment:
    PACKAGE_DIRECTORY: invirtualenv

jobs:
  validate_test:
    template: python/validate_unittest
    requires: [~commit, ~pr]

  validate_lint:
    template: python/validate_lint
    requires: [~commit, ~pr]

  validate_codestyle:
    template: python/validate_codestyle
    requires: [~commit, ~pr]

  generate_version:
    template: python/generate_version
    requires: [~commit]

  publish_test_pypi:
    template: python/package_python
    environment:
      PUBLISH: True
      TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
    requires: [validate_test, validate_lint, validate_codestyle, generate_version]

  verify_test_package:
    template: python/validate_pypi_package
    environment:
        PYPI_INDEX_URL: https://test.pypi.org/simple
    requires: [publish_test_pypi]
  
  package_rpm:
    template: python/package_python
    steps:
        - postmotd: |
            cat > deploy.conf <<EOF
            [global]
            name = invirtualenv
            description = invirtualenv utility for deploying python applicatons
            version = {{PACKAGE_VERSION|default('0.0.0')}}
            link_bin_files = True
            virtualenv_dir = /var/lib/virtualenvs
            basepython=python

            [pip]
            deps:
                invirtualenv=={{PACKAGE_VERSION|default('0.0.0')}}

            [rpm_package]
            deps:

            [docker_container]
            base_image=quay.io/pypa/manylinux2010_x86_64
            container_name=yahoo/invirtualenv
            # To run a script when the container starts, uncomment the following and replace {scriptname} with the nane of the script to run.
            # entrypoint=/var/lib/virtualenvs/sdv4_v5_pipeline_validation_{{PACKAGE_VERSION|default('0.0.0')}}/bin/{scriptname}
            EOF
        - install_utility: |
            yum install -y rpm-build redhat-rpm-config
            $BASE_PYTHON -m venv /tmp/testvenv
            /tmp/testvenv/bin/pip install .
        - package_code: |
            PACKAGE_VERSION=`meta get package.version`
            /tmp/testvenv/bin/invirtualenv create_package rpm
        - install_package: rpm -ivh invirtualenv*.rpm
    requires: [publish_test_pypi]
  
  publish_prod_pypi:
    template: python/package_python
    environment:
      PUBLISH: True
    requires: [package_rpm, verify_test_package]
